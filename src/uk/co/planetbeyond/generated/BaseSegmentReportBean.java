




// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.manager.SegmentReportManagerImpl;

/**
 * SegmentReportBean is a mapping of segment_report Table.
 * @author sql2java
*/
@Persistent
public class BaseSegmentReportBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = -22141528167004907L;
	
    protected Integer segmentHitsDuration;
    protected Integer segmentUniqueHits;
    protected Integer segmentHits;
    protected String segmentName;
    protected java.util.Date reportDate;
    protected Integer segmentReportId;

    /**
     * Prefered methods to create a SegmentReportBean is via the createSegmentReportBean method in SegmentReportManager or
     * via the factory class SegmentReportFactory create method
     */
    public BaseSegmentReportBean()
    {
    }

    /**
     * Getter method for segmentHitsDuration.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.segment_hits_duration</li>
     * <li>comments: segment hit duration in seconds</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of segmentHitsDuration
     */
    public Integer getSegmentHitsDuration()
    {
        return segmentHitsDuration;
    }

    /**
     * Setter method for segmentHitsDuration.
     * <br>
     *
     * @param newVal the new value to be assigned to segmentHitsDuration
     */
    public void setSegmentHitsDuration(Integer newVal)
    {
        segmentHitsDuration = newVal;
    }

    /**
     * Getter method for segmentUniqueHits.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.segment_unique_hits</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of segmentUniqueHits
     */
    public Integer getSegmentUniqueHits()
    {
        return segmentUniqueHits;
    }

    /**
     * Setter method for segmentUniqueHits.
     * <br>
     *
     * @param newVal the new value to be assigned to segmentUniqueHits
     */
    public void setSegmentUniqueHits(Integer newVal)
    {
        segmentUniqueHits = newVal;
    }

    /**
     * Getter method for segmentHits.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.segment_hits</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of segmentHits
     */
    public Integer getSegmentHits()
    {
        return segmentHits;
    }

    /**
     * Setter method for segmentHits.
     * <br>
     *
     * @param newVal the new value to be assigned to segmentHits
     */
    public void setSegmentHits(Integer newVal)
    {
        segmentHits = newVal;
    }

    /**
     * Getter method for segmentName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.segment_name</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of segmentName
     */
    public String getSegmentName()
    {
        return segmentName;
    }

    /**
     * Setter method for segmentName.
     * <br>
     *
     * @param newVal the new value to be assigned to segmentName
     */
    public void setSegmentName(String newVal)
    {
        segmentName = newVal;
    }

    /**
     * Getter method for reportDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.report_date</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.DATE</li>
     * </ul>
     *
     * @return the value of reportDate
     */
    public java.util.Date getReportDate()
    {
        return reportDate;
    }

    /**
     * Setter method for reportDate.
     * <br>
     *
     * @param newVal the new value to be assigned to reportDate
     */
    public void setReportDate(java.util.Date newVal)
    {
        reportDate = newVal;
    }

    /**
     * Getter method for segmentReportId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: segment_report.segment_report_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of segmentReportId
     */
    public Integer getSegmentReportId()
    {
        return segmentReportId;
    }

    /**
     * Setter method for segmentReportId.
     * <br>
     *
     * @param newVal the new value to be assigned to segmentReportId
     */
    public void setSegmentReportId(Integer newVal)
    {
        segmentReportId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseSegmentReportBean bean)
    {
        setSegmentHitsDuration(bean.getSegmentHitsDuration());
        setSegmentUniqueHits(bean.getSegmentUniqueHits());
        setSegmentHits(bean.getSegmentHits());
        setSegmentName(bean.getSegmentName());
        setReportDate(bean.getReportDate());
        setSegmentReportId(bean.getSegmentReportId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseSegmentReportBean)) {
			return false;
		}

		BaseSegmentReportBean obj = (BaseSegmentReportBean) object;
		return new EqualsBuilder()
            .append(getSegmentHitsDuration(), obj.getSegmentHitsDuration())
            .append(getSegmentUniqueHits(), obj.getSegmentUniqueHits())
            .append(getSegmentHits(), obj.getSegmentHits())
            .append(getSegmentName(), obj.getSegmentName())
            .append(getReportDate(), obj.getReportDate())
            .append(getSegmentReportId(), obj.getSegmentReportId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public SegmentReportBean toManagedBean()
    {
	SegmentReportBean bean = SegmentReportManagerImpl.getInstance().createSegmentReportBean();
        bean.setSegmentHitsDuration(getSegmentHitsDuration());
        bean.setSegmentUniqueHits(getSegmentUniqueHits());
        bean.setSegmentHits(getSegmentHits());
        bean.setSegmentName(getSegmentName());
        bean.setReportDate(getReportDate());
        bean.setSegmentReportId(getSegmentReportId());
	return bean;
    }
}






// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.manager.WebUserManagerImpl;

/**
 * WebUserBean is a mapping of web_user Table.
 * @author sql2java
*/
@Persistent
public class BaseWebUserBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = -22141528167004907L;
	
    protected String password;
    protected String username;

    /**
     * Prefered methods to create a WebUserBean is via the createWebUserBean method in WebUserManager or
     * via the factory class WebUserFactory create method
     */
    public BaseWebUserBean()
    {
    }

    /**
     * Getter method for password.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: web_user.password</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of password
     */
    public String getPassword()
    {
        return password;
    }

    /**
     * Setter method for password.
     * <br>
     *
     * @param newVal the new value to be assigned to password
     */
    public void setPassword(String newVal)
    {
        password = newVal;
    }

    /**
     * Getter method for username.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: web_user.username</li>
     * <li>column size: 50</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of username
     */
    public String getUsername()
    {
        return username;
    }

    /**
     * Setter method for username.
     * <br>
     *
     * @param newVal the new value to be assigned to username
     */
    public void setUsername(String newVal)
    {
        username = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseWebUserBean bean)
    {
        setPassword(bean.getPassword());
        setUsername(bean.getUsername());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseWebUserBean)) {
			return false;
		}

		BaseWebUserBean obj = (BaseWebUserBean) object;
		return new EqualsBuilder()
            .append(getPassword(), obj.getPassword())
            .append(getUsername(), obj.getUsername())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public WebUserBean toManagedBean()
    {
	WebUserBean bean = WebUserManagerImpl.getInstance().createWebUserBean();
        bean.setPassword(getPassword());
        bean.setUsername(getUsername());
	return bean;
    }
}






// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Author: Javed Kansi
// ______________________________________________________

package uk.co.planetbeyond.generated;

import java.io.Serializable;
import com.sleepycat.persist.model.Persistent;
import org.apache.commons.lang.builder.EqualsBuilder;

import uk.co.planetbeyond.manager.SubscriberManagerImpl;

/**
 * SubscriberBean is a mapping of subscriber Table.
 * @author sql2java
*/
@Persistent
public class BaseSubscriberBean extends BaseGeneratedBean implements Serializable
{
	private static final long serialVersionUID = -22141528167004907L;
	
    protected java.util.Date unsubscriptionTimestamp;
    protected String language;
    protected Integer createdThrough;
    protected java.util.Date deactivationTimestamp;
    protected Integer status;
    protected java.util.Date creationTimestamp;
    protected String msisdn;
    protected Integer subscriberId;

    /**
     * Prefered methods to create a SubscriberBean is via the createSubscriberBean method in SubscriberManager or
     * via the factory class SubscriberFactory create method
     */
    public BaseSubscriberBean()
    {
    }

    /**
     * Getter method for unsubscriptionTimestamp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.unsubscription_timestamp</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of unsubscriptionTimestamp
     */
    public java.util.Date getUnsubscriptionTimestamp()
    {
        return unsubscriptionTimestamp;
    }

    /**
     * Setter method for unsubscriptionTimestamp.
     * <br>
     *
     * @param newVal the new value to be assigned to unsubscriptionTimestamp
     */
    public void setUnsubscriptionTimestamp(java.util.Date newVal)
    {
        unsubscriptionTimestamp = newVal;
    }

    /**
     * Getter method for language.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.language</li>
     * <li>comments: urdu</li>
     * <li>column size: 15</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of language
     */
    public String getLanguage()
    {
        return language;
    }

    /**
     * Setter method for language.
     * <br>
     *
     * @param newVal the new value to be assigned to language
     */
    public void setLanguage(String newVal)
    {
        language = newVal;
    }

    /**
     * Getter method for createdThrough.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.created_through</li>
     * <li>comments: 1=SMS
2=IVR</li>
     * <li>column size: 3</li>
     * <li>jdbc type returned by the driver: Types.TINYINT</li>
     * </ul>
     *
     * @return the value of createdThrough
     */
    public Integer getCreatedThrough()
    {
        return createdThrough;
    }

    /**
     * Setter method for createdThrough.
     * <br>
     *
     * @param newVal the new value to be assigned to createdThrough
     */
    public void setCreatedThrough(Integer newVal)
    {
        createdThrough = newVal;
    }

    /**
     * Getter method for deactivationTimestamp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.deactivation_timestamp</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of deactivationTimestamp
     */
    public java.util.Date getDeactivationTimestamp()
    {
        return deactivationTimestamp;
    }

    /**
     * Setter method for deactivationTimestamp.
     * <br>
     *
     * @param newVal the new value to be assigned to deactivationTimestamp
     */
    public void setDeactivationTimestamp(java.util.Date newVal)
    {
        deactivationTimestamp = newVal;
    }

    /**
     * Getter method for status.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.status</li>
     * <li>comments: 0 = Inactive
1 = Active</li>
     * <li>column size: 3</li>
     * <li>jdbc type returned by the driver: Types.TINYINT</li>
     * </ul>
     *
     * @return the value of status
     */
    public Integer getStatus()
    {
        return status;
    }

    /**
     * Setter method for status.
     * <br>
     *
     * @param newVal the new value to be assigned to status
     */
    public void setStatus(Integer newVal)
    {
        status = newVal;
    }

    /**
     * Getter method for creationTimestamp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.creation_timestamp</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of creationTimestamp
     */
    public java.util.Date getCreationTimestamp()
    {
        return creationTimestamp;
    }

    /**
     * Setter method for creationTimestamp.
     * <br>
     *
     * @param newVal the new value to be assigned to creationTimestamp
     */
    public void setCreationTimestamp(java.util.Date newVal)
    {
        creationTimestamp = newVal;
    }

    /**
     * Getter method for msisdn.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.msisdn</li>
     * <li>column size: 15</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of msisdn
     */
    public String getMsisdn()
    {
        return msisdn;
    }

    /**
     * Setter method for msisdn.
     * <br>
     *
     * @param newVal the new value to be assigned to msisdn
     */
    public void setMsisdn(String newVal)
    {
        msisdn = newVal;
    }

    /**
     * Getter method for subscriberId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: subscriber.subscriber_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of subscriberId
     */
    public Integer getSubscriberId()
    {
        return subscriberId;
    }

    /**
     * Setter method for subscriberId.
     * <br>
     *
     * @param newVal the new value to be assigned to subscriberId
     */
    public void setSubscriberId(Integer newVal)
    {
        subscriberId = newVal;
    }


    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(BaseSubscriberBean bean)
    {
        setUnsubscriptionTimestamp(bean.getUnsubscriptionTimestamp());
        setLanguage(bean.getLanguage());
        setCreatedThrough(bean.getCreatedThrough());
        setDeactivationTimestamp(bean.getDeactivationTimestamp());
        setStatus(bean.getStatus());
        setCreationTimestamp(bean.getCreationTimestamp());
        setMsisdn(bean.getMsisdn());
        setSubscriberId(bean.getSubscriberId());
    }

    /**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object)
	{
		if (!(object instanceof BaseSubscriberBean)) {
			return false;
		}

		BaseSubscriberBean obj = (BaseSubscriberBean) object;
		return new EqualsBuilder()
            .append(getUnsubscriptionTimestamp(), obj.getUnsubscriptionTimestamp())
            .append(getLanguage(), obj.getLanguage())
            .append(getCreatedThrough(), obj.getCreatedThrough())
            .append(getDeactivationTimestamp(), obj.getDeactivationTimestamp())
            .append(getStatus(), obj.getStatus())
            .append(getCreationTimestamp(), obj.getCreationTimestamp())
            .append(getMsisdn(), obj.getMsisdn())
            .append(getSubscriberId(), obj.getSubscriberId())
            .isEquals();
	}


    /**
     * Converts the current object to full form of the bean which includes all utility methods as well
     */
    public SubscriberBean toManagedBean()
    {
	SubscriberBean bean = SubscriberManagerImpl.getInstance().createSubscriberBean();
        bean.setUnsubscriptionTimestamp(getUnsubscriptionTimestamp());
        bean.setLanguage(getLanguage());
        bean.setCreatedThrough(getCreatedThrough());
        bean.setDeactivationTimestamp(getDeactivationTimestamp());
        bean.setStatus(getStatus());
        bean.setCreationTimestamp(getCreationTimestamp());
        bean.setMsisdn(getMsisdn());
        bean.setSubscriberId(getSubscriberId());
	return bean;
    }
}
